[{"/Users/zachpreston/Code/expense_tracker/src/index.js":"1","/Users/zachpreston/Code/expense_tracker/src/App.js":"2","/Users/zachpreston/Code/expense_tracker/src/components/Details/Details.jsx":"3","/Users/zachpreston/Code/expense_tracker/src/components/Details/styles.js":"4","/Users/zachpreston/Code/expense_tracker/src/styles.js":"5","/Users/zachpreston/Code/expense_tracker/src/components/Main/Main.jsx":"6","/Users/zachpreston/Code/expense_tracker/src/components/Main/styles.js":"7","/Users/zachpreston/Code/expense_tracker/src/components/Main/Form/Form.jsx":"8","/Users/zachpreston/Code/expense_tracker/src/components/Main/Form/styles.js":"9","/Users/zachpreston/Code/expense_tracker/src/components/Main/List/List.jsx":"10","/Users/zachpreston/Code/expense_tracker/src/components/Main/List/styles.jsx":"11","/Users/zachpreston/Code/expense_tracker/src/context/context.js":"12","/Users/zachpreston/Code/expense_tracker/src/context/contextReducer.js":"13","/Users/zachpreston/Code/expense_tracker/src/constants/categories.js":"14","/Users/zachpreston/Code/expense_tracker/src/utils/formatDate.js":"15","/Users/zachpreston/Code/expense_tracker/src/useTransactions.js":"16","/Users/zachpreston/Code/expense_tracker/src/components/Snackbar/Snackbar.jsx":"17","/Users/zachpreston/Code/expense_tracker/src/components/Snackbar/styles.js":"18","/Users/zachpreston/Code/expense_tracker/src/components/InfoCard.jsx":"19"},{"size":404,"mtime":1608520832630,"results":"20","hashOfConfig":"21"},{"size":1377,"mtime":1608688679843,"results":"22","hashOfConfig":"21"},{"size":635,"mtime":1608517953644,"results":"23","hashOfConfig":"21"},{"size":237,"mtime":1608505592144,"results":"24","hashOfConfig":"21"},{"size":552,"mtime":1608499567477,"results":"25","hashOfConfig":"21"},{"size":1063,"mtime":1608688943963,"results":"26","hashOfConfig":"21"},{"size":490,"mtime":1608505208718,"results":"27","hashOfConfig":"21"},{"size":4099,"mtime":1608687506702,"results":"28","hashOfConfig":"21"},{"size":235,"mtime":1608505568968,"results":"29","hashOfConfig":"21"},{"size":1261,"mtime":1608512423002,"results":"30","hashOfConfig":"21"},{"size":399,"mtime":1608506085909,"results":"31","hashOfConfig":"21"},{"size":1344,"mtime":1608686602555,"results":"32","hashOfConfig":"21"},{"size":512,"mtime":1608685198295,"results":"33","hashOfConfig":"21"},{"size":1660,"mtime":1608512572245,"results":"34","hashOfConfig":"21"},{"size":320,"mtime":1608513080100,"results":"35","hashOfConfig":"21"},{"size":1102,"mtime":1608517881700,"results":"36","hashOfConfig":"21"},{"size":745,"mtime":1608687402104,"results":"37","hashOfConfig":"21"},{"size":196,"mtime":1608686886586,"results":"38","hashOfConfig":"21"},{"size":404,"mtime":1608688151362,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"obnas",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/zachpreston/Code/expense_tracker/src/index.js",[],["81","82"],"/Users/zachpreston/Code/expense_tracker/src/App.js",[],"/Users/zachpreston/Code/expense_tracker/src/components/Details/Details.jsx",[],"/Users/zachpreston/Code/expense_tracker/src/components/Details/styles.js",[],"/Users/zachpreston/Code/expense_tracker/src/styles.js",[],"/Users/zachpreston/Code/expense_tracker/src/components/Main/Main.jsx",[],"/Users/zachpreston/Code/expense_tracker/src/components/Main/styles.js",[],"/Users/zachpreston/Code/expense_tracker/src/components/Main/Form/Form.jsx",["83"],"import React, { useState, useEffect, useContext } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSpeechContext } from '@speechly/react-client';\n\nimport formatDate from '../../../utils/formatDate';\nimport useStyles from './styles';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport CustomizedSnackbar from '../../Snackbar/Snackbar';\n\nconst initialState = {\n\tamount: '',\n\tcategory: '',\n\ttype: 'Income',\n\tdate: formatDate(new Date()),\n}\n\nconst Form = () => {\n\tconst classes = useStyles();\n\tconst [formData, setFormData] = useState(initialState);\n\tconst { addTransaction } = useContext(ExpenseTrackerContext);\n\tconst { segment } = useSpeechContext();\n\tconst [open, setOpen] = useState(false);\n\n\tconst createTransaction = () => {\n\t\tif(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n\n\t\tconst transaction = { ...formData, amount: Number(formData.amount), id: uuidv4() };\n\n\t\tsetOpen(true);\n\t\taddTransaction(transaction);\n\t\tsetFormData(initialState);\n\t}\n\n\tuseEffect(() => {\n\t\tif(segment) {\n\t\t\tif(segment.intent.intent === 'add_expense') {\n\t\t\t\tsetFormData({ ...formData, type: 'Expense' });\n\t\t\t} else if(segment.intent.intent === 'add_income') {\n\t\t\t\tsetFormData({ ...formData, type: 'Income' });\n\t\t\t} else if(segment.isFinal && segment.intent.intent === 'create_transaction') {\n\t\t\t\treturn createTransaction();\n\t\t\t} else if(segment.isFinal && segment.intent.intent === 'cancel_transaction') {\n\t\t\t\treturn setFormData(initialState);\n\t\t\t}\n\n\t\t\tsegment.entities.forEach((e) => {\n\t\t\t\tconst category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`;\n\n\t\t\t\tswitch (e.type) {\n\t\t\t\t\tcase 'amount':\n\t\t\t\t\t\tsetFormData({ ...formData, amount: e.value });\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'category':\n\t\t\t\t\t\tif(incomeCategories.map((iC) => iC.type).includes(category)) {\n\t\t\t\t\t\t\tsetFormData({ ...formData, type: 'Income', category });\n\t\t\t\t\t\t} else if(expenseCategories.map((iC) => iC.type).includes(category)) {\n\t\t\t\t\t\t\tsetFormData({ ...formData, type: 'Expense', category });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'date':\n\t\t\t\t\t\tsetFormData({ ...formData, date: e.value });\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif(segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\n\t\t\t\tcreateTransaction();\n\t\t\t}\n\t\t}\n\t}, [segment]);\n\n\tconst selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\n\n\treturn (\n\t\t<Grid container spacing={2}>\n\t\t\t<CustomizedSnackbar open={open} setOpen={setOpen} />\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\n\t\t\t\t\t{segment && segment.words.map((w) => w.value).join(\" \")}\n\t\t\t\t</Typography>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<InputLabel>Type</InputLabel>\n\t\t\t\t\t<Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\n\t\t\t\t\t\t<MenuItem value=\"Income\">Income</MenuItem>\n\t\t\t\t\t\t<MenuItem value=\"Expense\">Expense</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<FormControl fullWidth>\n\t\t\t\t\t<InputLabel>Category</InputLabel>\n\t\t\t\t\t<Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\n\t\t\t\t\t\t{selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<TextField type=\"number\" label=\"Amount\" fullWidth value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={6}>\n\t\t\t\t<TextField type=\"date\" label=\"Date\" fullWidth value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\n\t\t\t</Grid>\n\t\t\t<Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\n\t\t</Grid>\n\t)\n}\n\nexport default Form\n","/Users/zachpreston/Code/expense_tracker/src/components/Main/Form/styles.js",[],"/Users/zachpreston/Code/expense_tracker/src/components/Main/List/List.jsx",[],"/Users/zachpreston/Code/expense_tracker/src/components/Main/List/styles.jsx",[],"/Users/zachpreston/Code/expense_tracker/src/context/context.js",[],"/Users/zachpreston/Code/expense_tracker/src/context/contextReducer.js",[],"/Users/zachpreston/Code/expense_tracker/src/constants/categories.js",[],"/Users/zachpreston/Code/expense_tracker/src/utils/formatDate.js",["84"],"const formatDate = (date) => {\n\tconst d = new Date(date);\n\tlet month = `${d.getMonth() + 1}`;\n\tconst day = `${d.getDate()}`;\n\tconst year = d.getFullYear();\n\n\tif(month.length < 2) {\n\t\tmonth = `0${month}`;\n\t}\n\tif(day.length < 2) {\n\t\tday = `0${day}`;\n\t}\n\n\treturn [year, month, day].join('-');\n}\n\nexport default formatDate;\n","/Users/zachpreston/Code/expense_tracker/src/useTransactions.js",[],"/Users/zachpreston/Code/expense_tracker/src/components/Snackbar/Snackbar.jsx",[],"/Users/zachpreston/Code/expense_tracker/src/components/Snackbar/styles.js",[],"/Users/zachpreston/Code/expense_tracker/src/components/InfoCard.jsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":74,"column":5,"nodeType":"91","endLine":74,"endColumn":14,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":11,"column":3,"nodeType":"95","messageId":"96","endLine":11,"endColumn":6},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["99"],"no-const-assign","'day' is constant.","Identifier","const","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"102","text":"103"},[2498,2507],"[createTransaction, formData, segment]"]